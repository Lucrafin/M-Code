Table.FromList(
    List.Accumulate(
        Source, 
        {}, 
        (b, n) => 
            let 
                l = List.Last( b, { 1, {} } ), 
                f = Byte.From( ( List.Sum( l{1} ) ?? 0 ) + n < 51 ) 
            in 
                List.RemoveLastN( b, f ) & { { l{0} + 1 - f, { {}, l{1} }{f} & {n} } }
    ), 
    each {"Group" & Text.From(_{0}), Text.Combine(List.Transform(_{1}, Text.From), ", ")}, {"Groups", "Values"}
)


let
    Source = Excel.CurrentWorkbook(){[Name="Table1"]}[Content],

    //Accumulate rows into a custom structure:
    // This step builds a list of continent-country groupings based on specific logic
    A = List.Accumulate(
        Table.ToRows(Source),
        {},
        (s, c) =>
            let
                l = List.Last(s, { "", {} }),
                i = Byte.From(c{0} = null and List.Count(l{1}) <> 3)
            in
                List.RemoveLastN(s, i) &
                {
                    {
                        { c{0}, "" }{ i } & { "", l{0} }{ i },
                        { {}, l{1} }{ i } & { c{1} & "-" & Text.From(c{2}) }
                    }
                }
    )
in
    A



let
    Source = Excel.CurrentWorkbook(){[Name="Table1"]}[Content],

    R = Table.FromRows(
        List.Accumulate(
            Table.ToRows(Source),
            {},
            (s, c) =>
                let
                    l = List.Last(s, {}),
                    i = Byte.From(c{0} = null),
                    t = Text.From(c{2}),
                    r = {
                        { "", l{0} }{i} & { c{0}, "" }{i},
                        { c{1}, l{1} & " - " & c{1} }{i},
                        { t, l{2} & " - " & t }{i}
                    }
                in
                    List.RemoveLastN(s, i) & { r }
        ),
        Table.ColumnNames(Source)
    )
in
    R
